@startuml

interface sKUma{
    LoginGUI:
    AdminGUI:
    CourseLeaderGUI:
    --
    PullDatabaseData():
    SendDatabaseRequest():
    EditLecture():
    ChangePassword(old,new): boolean
}

class Student{
    Student ID = Person(ID)
    TA: boolean
    CourseList: str
    Education: str
    --
    sKUma.ViewSchedule():
    }

abstract class Person{
Firstname: str
Lastname: str
ID: str
__
Skuma.login()
}

class Admin{
    Employee ID = Person(ID)
    --
    sKUma.EditDatabase():
    sKUma.ViewAllSchedules():
    sKUma.ConfirmRequests():
}

class StudentCounsellor{
    Employee ID = Person(ID)
    --
    sKUma.ViewAllSchedules():
}


class Lecture {
    CourseType:
    Title: coursename + coursetype
    TimeSlot:
    Zoom: Boolean
    --
    }

class Course {
   CourseName:
   StudentList:
   ETCS: int
   Skemagruppe:
   Fakultet:
   --
   }

class CourseLeader{
    Guest: str
    CourseList:
    Employee ID = Person(ID)
    --
    sKUma.RequestEdit():
    sKUma.ViewSchedule():
}

class Database{
    LectureData:
    StudentData:
    EmployeeData:
    ClassRoomData:
    LoginData:
    --
    RecreateTables():
    SelectCourses():
    UpdateCourses():
    }

class Room{
Building: str
Floor: int
RoomNr: int
PeopleCapacity: int
Equipment: list
}

class Login{
Username:
Password:
Role = Person.Class
__
ConfirmLogin():boolean
}

Room  "1..1" .. "1..*" Database
CourseLeader "1…*" -- "1…1" Course
Course "1…*" -- "1…1" Lecture
Room - Lecture
sKUma -- Database
sKUma -- Person
Database "1…*" ... "1" Lecture
Student - Course
Person <|-- Admin
Person <|-- CourseLeader
Person <|-- Student
Person <|- StudentCounsellor
Login -- Database
Login - Person
@enduml


